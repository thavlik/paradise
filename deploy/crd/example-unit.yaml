apiVersion: app.paradise.dev/v1alpha1
kind: AudioUnit
metadata:
  name: neve511
spec:
  manufacturer: "Rupert Neve Designs, LLC."

  # The number of input signals. Defaults to 1.
  inputs: 1

  # The number of output signals. Defaults to 1.
  outputs: 1
status:
  # If the unit is claimed, the status object will be
  # updated with details about its current ownership.
  # There could be multiple AudioUnitClaims attempting
  # to lay ownership to this resource, but only one
  # of them (shown here) will be the true owner.
  claim:
    name: neve511-test-claim
    timestamp: "2020-04-24T18:54:38Z"
---
apiVersion: app.paradise.dev/v1alpha1
kind: AudioUnitClaim
metadata:
  name: neve511-claim-0
  annotations:
  # For management and billing purposes, the claim can
  # be annotated with information about end user ownership.
    paradise.dev/owner: "6dc990b3-ce16-41ab-8952-41ffce9ebd95"
spec:
  # The name of the owning Console resource
  console: test-console

  # The name of the AudioUnit resource
  unit: neve511
status:
  # Pending
  # Active
  # Terminated
  # Expired
  # ErrMaxUnitsExceeded
  # ErrUnauthorized
  # ErrNoMoreUnits
  phase: Pending

  # The claim will automatically transition into
  # the Expired phase by this date if it is still
  # in the Active phase.
  expiration: "2020-04-24T18:54:38Z"
---
# All of this is in the analog world
apiVersion: app.paradise.dev/v1alpha1
kind: Console
metadata:
  name: test-console
  annotations:
    # For management and billing purposes, the claim can
    # be annotated with information about end user ownership.
    paradise.dev/owner: "6dc990b3-ce16-41ab-8952-41ffce9ebd95"
spec:
  # Create ingress for the first input of
  # the preamp module.
  inputs: ["preamp.0"]

  # Patch the first output of our eq module into a
  # remote address. As long as the user is okay with
  # a round trip to the backend in order to compare
  # e.g. wet vs bypass, we only need a single output
  # stream and the source is mutated as needed.
  outputs:
    - source: eq.0
      dest: 297.281.23.1:35000

  # Define a boutique analog chain. This is a simple
  # one, but you should be able to do more complicated
  # setups like compressor sidechaining and use of
  # analog summing mixers with huge IO.
  units:
    - name: preamp
      unit: neve511
    - name: compressor
      unit: artprovlaii
      inputs:
        - preamp.0
    - name: eq
      unit: ssl611eq
      inputs:
        - compressor.0
status:
  # Pending
  # Active
  # ErrUnitFailure
  # ErrBadRouting
  phase: Pending

  # A list of claims is maintained reflecting the
  # physical hardware are associated with each unit.
  # Note that individual claims may be in error
  # states, and that information is propagated to
  # the Console's status.phase.
  claims:
    - name: preamp
      claim: neve511-claim-0
    - name: compressor
      claim: artprovlaii-claim-0
    - name: eq
      claim: ssl611eq-claim-0

  # Enumerate private and public network resources
  # for console IO.
  ingress:
    - name: preamp.0
      private:
        host: test-console-preamp.default.svc.cluster.local
        port: 20248
      public:
        host: example.com
        port: 30000

  # Physical patchbay, for analog signal routing.
  # All units in a Console must be on the same patchbay.
  # This one is MIDI programmable https://www.anatal.io/
  patchbay: pb0
