# Similar to nginx, we can alias addresses at the start of
# the config. Anywhere in this config you see an upstream name
# used, a full address (with protocol) will be substituted.
# It is recommended that you use named upstreams as it greatly
# improves readability.
upstream:
  # Anywhere "my-secure-upstream" is used where an address
  # is expected, it'll be replaced with the value below.
  - name: my-secure-upstream
  # Format is <IP>:<PORT>/<PROTOCOL>
    addr: 169.231.34.101:20000/UDP
  - name: my-insecure-upstream
    addr: 127.0.0.1:20001/UDP

# Virtual audio device definitions
devices:
  # Simple example of a virtual audio device. Note that
  # mixing and other complicated routing is done in user
  # space. This describes the kernel side of things.
  - name: "My Virtual Device"
    inputs:
      # Number of input channels. Audio received by the
      # endpoints will be directed to one of these, which
      # can then be used by any application utilizing
      # microphone input.
      channels: 2
      listeners:
        # Network interface on which to listen for receiving
        # audio packets. Specifying 0.0.0.0 as the IP will
        # listen on all interfaces.
        - addr: my-secure-upstream
        # Transport layer security configuration. This is
        # most useful for sending audio over public pipes.
          tls:
            cacert: /etc/cert/ca.crt # optional cert authority
            cert: /etc/cert/tls.crt # public cert
            key: /etc/cert/tls.key # private key
        # Expose the same endpoint without TLS on localhost.
        # The idea is that this is not externally accessible,
        # and it's used internally by your computer for
        # efficient audio routing when TLS is unnecessary.
        - addr: my-insecure-upstream
    # Output channel definitions
    outputs:
      # Number of output channels recognized by host OS.
      channels: 2
      # List of addresses that will receive audio. The first
      # demonstrates use of TLS and the second how only
      # specific channels can be selected for a destination.
      destinations:
        - addr: my-secure-upstream
        # It is only necessary to specify the public
        # certs on the client when self-signing. Use
        # of LetsEncrypt et al creates certificates
        # that are trusted by the client machine's
        # certificate authority. TODO: skip key verification?
          tls:
            enabled: true
            cacert: /etc/cert/ca.crt
            cert: /etc/cert/tls.crt
          # TCP only: optionally supply client private key
          # for mTLS.
            #key: /etc/cert/other.key

        # Second output doesn't utilize TLS.
        - addr: my-insecure-upstream
        # Only send audio received on the second output
        # channel of this device.
          channels:
            - 1
